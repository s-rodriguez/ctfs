#!/usr/bin/env python

import base64
import binascii

hexlify = binascii.hexlify
b64_encode = base64.b64encode

cipher = b'37151032694744553d12220a0f584315517477520e2b3c226b5b1e150f5549120e5540230202360f0d20220a376c0067'

def enc(f):
    encoded = b64_encode(f)
    z = []
    i = 0
    while i < len(encoded):
        z += [ encoded[i] ^ encoded[((i + 1) % len(encoded))]]
        i = i + 1
    c = hexlify(bytearray(z))
    return c


################
### Solution ###
################

def dec(c):
    unhex_c = binascii.unhexlify(c)
    xored_c = [unhex_c[i] for i in range(len(unhex_c))]

    flag_bytes = [i for i in range(len(xored_c))]
    flag_bytes[-1] = 61 # Use info that flag ends with }

    # Do xor in reverse using the ending 
    i = len(flag_bytes) - 2
    while i >= 0:
        flag_bytes[i] = xored_c[i] ^ flag_bytes[i+1]
        i -= 1
    
    encoded_flag = bytes(flag_bytes)
    flag = base64.b64decode(encoded_flag)
    print(flag)
